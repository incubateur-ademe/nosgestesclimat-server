// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id         String   @id @db.Uuid
  survey     String
  total      Float    @db.DoublePrecision
  progress   Float    @db.Real
  byCategory Json
  context    Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([id, survey])
}

model EmailSimulation {
  id        String   @id @default(cuid())
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id            String              @id @default(cuid())
  name          String
  emoji         String
  administrator GroupAdministrator?
  participants  GroupParticipant[]
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}

model GroupAdministrator {
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  group     Group    @relation(fields: [groupId], onDelete: Cascade, references: [id])
  groupId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GroupParticipant {
  id           String   @id @default(uuid()) @db.Uuid
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.Uuid
  simulationId String   @db.Uuid
  group        Group    @relation(fields: [groupId], onDelete: Cascade, references: [id])
  groupId      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([groupId, userId])
}

enum NorthstarRatingType {
  learned
  actions
}

model NorthstarRating {
  id           String              @id @default(cuid())
  simulationId String              @unique @db.Uuid
  type         NorthstarRatingType
  value        Int?                @db.SmallInt
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

enum QuizzAnswerIsAnswerCorrect {
  correct
  almost
  wrong
}

model QuizzAnswer {
  id              String                     @id @default(cuid())
  simulationId    String                     @db.Uuid
  isAnswerCorrect QuizzAnswerIsAnswerCorrect
  answer          String
  createdAt       DateTime                   @default(now())
  updatedAt       DateTime                   @updatedAt

  @@unique([simulationId, answer])
}

model Survey {
  id          String   @id @default(cuid())
  name        String   @unique
  contextFile String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id            String               @id @db.Uuid
  name          String?
  email         String?
  administrator GroupAdministrator[]
  member        GroupParticipant[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

model VerificationCode {
  id             String   @id @default(uuid()) @db.Uuid
  userId         String   @db.Uuid
  email          String
  code           String   @db.VarChar(6)
  expirationDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
